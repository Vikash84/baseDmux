# config file for snakemake
# adjust variables berfore running baseDmux workflow

##############################
##### input/output directory
INDIR: "/data3/projects/xanthopore/baotram/test/reads"
OUTDIR: "/home/baotram/tal/workflow/test/results"
NASID: "" # host name, if indir and outdir in NAS but workdir is not


##############################
##### kit and flowcell
KIT: "SQK-RBK004"
FLOWCELL: "FLO-MIN106"


##############################
##### resources
RESOURCE: "CPU" # "CPU"/"GPU" ## resources for running Guppy and Deepbinner
NUM_GPUS: 3 # mumber of GPU devices to use # baseDmux will decide CUDA devices based on availability ## GPU mode only


##############################
##### guppy_basecaller + fast5_subset parameters
RULE_GUPPY_BASECALLING:
    'MIN_QSCORE': 7 # basecalling will filter reads based on minimum q-score specified here
    'NUM_CALLERS': 6 # number of parallel basecallers to create ## recommended: NUM_CALLERS=2*NUM_GPUS
    'CPU_THREADS_PER_CALLER': 12 # number of CPU threads to create for each caller to use
    'GPU_RUNNERS_PER_DEVICE': 4 # number of neural network runners to create per CUDA device ## GPU mode only
    'ADDITION': "--calib_detect --chunks_per_caller 10000" # additional params that do not affect output format ## provide parameters with arguments ## do NOT use --compress_fastq, because next steps use uncompressed fastq
    'KEEP_LOG_FILES': False # True/False
    'KEEP_FAIL_READS': False # True/False
    'FAST5_COMPRESSION': "gzip" # "vbz"/"vbz_legacy_v0"/"gzip" ## compression algorithm by fast5_subset (ont_fast5_api) to reduce file size and improve read/write performance

RULE_GET_MULTI_FAST5_PER_BARCODE:
    'THREADS': 12

##############################
##### choose types of demultiplexer
DEMULTIPLEXER: ["guppy", "deepbinner"] # "guppy"/"deepbinner"


##############################
##### guppy_barcoder parameters
RULE_GUPPY_DEMULTIPLEXING:
    'CONFIG': "configuration.cfg"
    'WORKER_THREADS': 12
    'ADDITION': "" # --trim_barcodes is always implemented by default


##############################
##### multi_to_single_fast5 (ont_fast5_api) parameters
RULE_MULTI_TO_SINGLE_FAST5:
    'THREADS': 12


##############################
##### deepbinner classify parameters
RULE_DEEPBINNER_CLASSIFICATION:
    'PRESET': "rapid" # 'native'/'rapid'
    'OMP_NUM_THREADS': 12 #
    'ADDITION': ""


##############################
##### MinIONQC parameters
RULE_MINIONQC_:
    'SMALLFIGURES': "FALSE" # 'TRUE'/'FALSE'
    'PROCESSORS': 12

##############################
##### Post-demultiplexing
POST_DEMULTIPLEXING: ["porechop", "filtlong"]

RULE_PORECHOP:

RULE_FILTLONG:

##############################
##### get_reads_per_genome parameters
RULE_GET_READS_PER_GENOME:
    'BARCODE_BY_GENOME': "barcodeByGenome_sample.tsv" # it can be blank then this rule will not be excecuted ## information table for subseting fast5 and fastq to genome folder ## if "guppy"/"deepbinner" is specified in "Demultiplexer" on the table, this demultiplexer will still be used for demultiplexing even it is not included by 'DEMULTIPLEXER'
    'TRANSFERING': "copy" # "copy"/"move"/"symlink"


##############################
##### reports
REPORTS:
    'SNAKEMAKE_REPORT':
        'MINIONQC_BASECALL': True
        'MINIONQC_DEMULTIPLEX': False
        'MULTIQC_BASECALL': True
        'MULTIQC_DEMULTIPLEX': True
    'DEMULTIPLEX_REPORT': True
